!function(){"use strict";var e=angular.module("ai.public.logger",["ng"]),r={error:0,warning:1,info:2,debug:3,trace:4};e.constant("aiLoggerLogLevels",r),e.provider("aiLogger",function(){var e,t,n=["ERROR","WARNING","INFO","DEBUG","TRACE"],o=["error","warn","info","debug","trace"],i=r.info,a=function(e){return e},g="%1$s  %2$-7s  %3$s - %4$s",u="unknownApp",s=function(){var e=new Date,r=e.toISOString().replace(/T/g," ");return r.replace(/Z/g," (UTC)")},l=function(e){if(angular.isString(e)){var t=_.find(n,function(r){return r===e.toUpperCase()});if(angular.isDefined(t))return r[t];throw new Error("Log level "+e+" is unknown")}if(_.isFinite(e)){if(e<r.error||e>r.trace)throw new Error("Cannot set log level: log level must be >= 0 and <= 4");return e}throw new Error("Cannot set log level: unknown log level type")},f=function(){function e(t){var i=this,a=t;this.getLogger=function(r){var n=String(r);return _.isString(t.loggerName)&&t.loggerName.length>0&&(n=t.loggerName+"."+n),new e(_.assign({},t,{loggerName:n}))},this.setLogLevel=function(e){a.logLevel=l(e)};var g=function(e){var r=_.rest(e);return a.stringFormatter.apply(null,_.map(r,a.translator))},u=function(e){if(!(a.logLevel<e)){var t=a.stringFormatter(a.messageFormat,a.timeStampGenerator(),n[e],a.loggerName,g(arguments)),i=e===r.trace?o[r.debug]:o[e];a.outputWritter[i](t)}};_.each(o,function(e,r){i[e]=_.bind(u,i,r)})}return e}();return{setAppName:function(e){if(!_.isString(e))throw new Error("Invalid Argument: expected application name to be a string");u=e},setOutputWritter:function(r){if(_.any(o,function(e){return _.isUndefined(r[e])}))throw new Error("Invalid argument: writter must have following methods; error, warn, info, debug");e=r},setTranslator:function(e){if(!_.isFunction(e))throw new Error("Invalid argument: expected translator to be a function");a=e},setStringFormatter:function(e){if(!_.isFunction(e))throw new Error("Invalid argument: expected string formatter to be a function");t=e},setLogLevel:function(e){i=l(e)},setTimeStampGenerator:function(e){if(!_.isFunction(e))throw new Error("Invalid Argument: expected time stamp generator to be a function");s=e},setMessageFormat:function(e){if(!_.isString(e))throw new Error("Invalid Argument: expected formatting pattern to be a string");g=e},$get:["$log","$window",function(r,n){return _.isUndefined(e)&&(e=r),_.isUndefined(t)&&(t=n.s.sprintf),new f({loggerName:u,outputWritter:e,translator:a,stringFormatter:t,logLevel:i,timeStampGenerator:s,messageFormat:g})}]}})}();
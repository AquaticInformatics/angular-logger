// Copyright 2015 Aquatic Informatics Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
!function(){"use strict";var e={error:0,warning:1,info:2,debug:3,trace:4};angular.module("ai.public.logger",["ng"]).constant("AiLoggerLogLevels",e).provider("AiLogger",function(){var r,n=["ERROR","WARNING","INFO","DEBUG","TRACE"],t=["error","warn","info","debug","trace"],o=e.info,i=function(e){return e},a="%1$s  %2$-7s  %3$s - %4$s",u="unknownApp",s=function(){var e=new Date,r=e.toISOString().replace(/T/g," ");return r.replace(/Z/g," (UTC)")},g=function(r){if(angular.isString(r)){var n=_.find(t,function(e){return e===r.toLowerCase()});if(angular.isDefined(n))return e[n];throw new Error("Log level "+r+" is unknown")}if(_.isFinite(r)){if(r<e.error||r>e.trace)throw new Error("Cannot set log level: log level must be >= 0 and <= 4");return r}throw new Error("Cannot set log level: unknown log level type")},l=function(){function r(o){var i=this,a=o;this.getLogger=function(e){var n=String(e);return o.loggerName.length>0&&(n=o.loggerName+"."+n),new r(_.assign({},o,{loggerName:n}))},this.setLogLevel=function(e){a.logLevel=g(e)};var u=function(e){var r=_.tail(e);try{return a.stringFormatter.apply(null,_.map(r,a.translator))}catch(n){console.error("Failed to log message. Could not format string:",JSON.stringify(r),JSON.stringify(n))}},s=function(r){if(!(a.logLevel<r)){var o=a.stringFormatter(a.messageFormat,a.timeStampGenerator(),n[r],a.loggerName,u(arguments)),i=t[r];r===e.trace&&(i=_.isUndefined(a.outputWritter[i])?t[e.debug]:t[r]),a.outputWritter[i](o)}};_.each(t,function(e,r){i[e]=_.bind(s,i,r)})}return r}();return{setAppName:function(e){u=String(e)},setTranslator:function(e){i=e},setStringFormatter:function(e){r=e},setLogLevel:function(e){o=g(e)},setTimeStampGenerator:function(e){s=e},setMessageFormat:function(e){a=e},$get:["$log","$window",function(e,n){return _.isUndefined(r)&&(r=n.s.sprintf),new l({loggerName:u,outputWritter:e,translator:i,stringFormatter:r,logLevel:o,timeStampGenerator:s,messageFormat:a})}]}})}(),function(){"use strict";angular.module("ai.public.serverLogger",["ng"]).config(["$provide",function(e){e.decorator("$log",["$delegate","$injector",function(e,r){var n=r.get("AiServerLogger"),t=e.error,o=e.warn,i=e.info,a=e.debug,u=function(e,r){return function(){var t=_.toArray(arguments);e.apply(null,t);var o=1===t.length?_.first(t):JSON.stringify(t);n.send(o,r)}};return e.error=u(t,"Error"),e.warn=u(o,"Warning"),e.info=u(i,"Info"),e.debug=u(a,"Debug"),e.trace=u(a,"Trace"),e}])}]).provider("AiServerLogger",function(){var e,r={},n=100,t=6e5,o=function(){return{Message:arguments[0],Level:arguments[1]}},i=function(){function e(e){var r,n,t=e,i=[],a=function(){var e=_.take(i,t.queueSize);i=_.slice(i,t.queueSize),_.isUndefined(n)&&(n=t.injector.get("$http")),n({method:"POST",url:t.serverPostEndPoint,headers:t.headers,data:e})},u=function(){angular.isDefined(r)&&i.length>=t.queueSize&&(clearTimeout(r),a()),r=setTimeout(function(){r=void 0,0!==i.length&&a()},t.postToServerDelay)};this.send=function(){if(_.isUndefined(t.serverPostEndPoint))return void console.log("Cannot send log messages to unknown server end point.  Check AiServerLoggerProvider configuration.");var e=o.apply(null,arguments);i.push(e),u()}}return e}();return{setServerPostEndPoint:function(r){e=r},setQueueSize:function(e){n=e},setHeaders:function(e){_.assign(r,e)},setPostToServerDelay:function(e){t=e},setTransformParameters:function(e){o=e},$get:["$injector",function(o){return new i({injector:o,headers:r,queueSize:n,postToServerDelay:t,serverPostEndPoint:e})}]}})}();